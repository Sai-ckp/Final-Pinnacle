# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - pinnaclecollege

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      - name: üß± Install system dependencies for WeasyPrint
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: ‚ôªÔ∏è Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üîß Create virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: ‚öôÔ∏è Run collectstatic
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput || true

      - name: üß≥ Prepare artifact for deployment
        run: |
          shopt -s dotglob
          mkdir artifact
          rsync -av --exclude='venv' --exclude='artifact' --exclude='.git' ./ artifact/

      - name: ‚¨ÜÔ∏è Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: artifact

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Download artifact from build
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: app

      - name: üìÅ Move contents to root
        run: |
          shopt -s dotglob
          cp -r app/* .

      - name: üìÑ List files before deployment
        run: find . -type f

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: üîß Recreate venv and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîê Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C153C72D964D4C23AD6589F51FAD1703 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FF813C25EBC54D41816D0DC0FDC2C23B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_CE3068C0BB68418FB7F677E09B099DE8 }}

      - name: üåê Set Azure Web App environment variables
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set --name pinnaclecollege --resource-group "pinnacle-college" --settings \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}' \
              SECRET_KEY='${{ secrets.SECRET_KEY }}' \
              DJANGO_SETTINGS_MODULE='student_alerts_app.deployment' \
              PYTHONUNBUFFERED=1

      - name: üß™ Run Django migrations
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: üöÄ Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'pinnaclecollege'
          slot-name: 'Production'
