name: Build and deploy Python app to Azure Web App - pinnaclecollege

on:
  push:
    branches: [ main ]   # make sure your EntraID federated credential matches this branch
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîé Detect changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            html:
              - '**/*.html'
              - 'templates/**'
            static:
              - 'static/**'
            backend:
              - '**/*.py'
              - 'requirements.txt'

      - name: üß± Install system dependencies for WeasyPrint (runner)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: üíæ Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üì¶ Create venv & install dependencies (runner)
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: üß∫ collectstatic (only when needed)
        if: steps.changes.outputs.html == 'true' || steps.changes.outputs.static == 'true' || steps.changes.outputs.backend == 'true'
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput || true

      - name: üóÑÔ∏è Run Django migrations (only when backend changed)
        if: steps.changes.outputs.backend == 'true'
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: üì¶ Prepare artifact
        run: |
          shopt -s dotglob
          mkdir artifact
          rsync -av --exclude='venv' --exclude='artifact' --exclude='.git' ./ artifact/

      # >>> KEY STEP: vendor runtime deps into the artifact so App Service has Django/gunicorn
      - name: üì¶ Vendor Python dependencies into artifact
        run: |
          python -m pip install --upgrade pip
          mkdir -p artifact/.python_packages/lib/site-packages
          pip install -r requirements.txt -t artifact/.python_packages/lib/site-packages

      - name: ‚¨ÜÔ∏è Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: artifact

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: app

      - name: üìÇ Move contents to root for deployment
        run: |
          shopt -s dotglob
          cp -r app/* .

      - name: üîç List files before deployment (debug)
        run: |
          pwd
          ls -la
          echo "---- requirements.txt (first 120 lines) ----"
          sed -n '1,120p' requirements.txt || true

      - name: üîê Login to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Disable Oryx (not needed since we vendor packages) + set startup command
      - name: ‚öôÔ∏è Configure app settings & startup
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set \
              --name pinnaclecollege \
              --resource-group "pinnacle" \
              --settings SCM_DO_BUILD_DURING_DEPLOYMENT=false ENABLE_ORYX_BUILD=false

            az webapp config set \
              --name pinnaclecollege \
              --resource-group "pinnacle" \
              --startup-file "gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0:\$PORT"

      - name: üå± Set Azure Web App environment variables (DB, etc.)
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set --name pinnaclecollege --resource-group "pinnacle" --settings \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}'

      - name: üöÄ Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'pinnaclecollege'
          slot-name: 'Production'
          package: .
