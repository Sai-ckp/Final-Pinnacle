name: Build and deploy Python app to Azure Web App - pinnaclecollege

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Stage source → artifact (exclude only junk; KEEP your Django apps)
      - name: Prepare artifact folder
        run: |
          shopt -s dotglob
          mkdir -p artifact
          rsync -av \
            --delete \
            --exclude='.git' \
            --exclude='venv' \
            --exclude='env' \
            --exclude='artifact' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.mypy_cache' \
            --exclude='*.pyc' \
            --exclude='*.log' \
            --exclude='*.zip' \
            --exclude='*.tar' \
            --exclude='*.tar.gz' \
            --exclude='downloads' \
            --exclude='excel_uploads' \
            --exclude='media' \
            --exclude='uploads' \
            ./ artifact/
          # neutralize files that can change what gets deployed
          rm -f artifact/.azureignore artifact/.deployment

      - name: Create deployment zip
        run: |
          cd artifact
          zip -r ../artifact.zip . -x "*/__pycache__/*"
          cd -
          du -sh artifact.zip || true
          unzip -l artifact.zip | sed -n '1,200p'  # sanity: must show manage.py, requirements.txt, student_alerts_app/wsgi.py, etc.

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app-zip
          path: artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app-zip
          path: .

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Configure Web App (Oryx ON, RFP OFF, startup)
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            # Oryx remote build so requirements get installed server-side
            az webapp config appsettings set -g pinnacle -n pinnaclecollege --settings \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true \
              ENABLE_ORYX_BUILD=true \
              WEBSITE_RUN_FROM_PACKAGE=0
            # Gunicorn startup (no startup.sh)
            az webapp config set -g pinnacle -n pinnaclecollege \
              --startup-file "gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0:\$PORT"
            # Optional: enable container logs
            az webapp log config -g pinnacle -n pinnaclecollege \
              --docker-container-logging filesystem --level information

      # Refresh token right before the upload to avoid 60-min expiry
      - name: Azure login (refresh before deploy)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # ✅ Use CLI Zip Deploy (more resilient than webapps-deploy@v3)
      - name: Zip Deploy via Azure CLI
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp deploy \
              --resource-group pinnacle \
              --name pinnaclecollege \
              --src-path artifact.zip \
              --type zip \
              --clean true \
              --restart true
