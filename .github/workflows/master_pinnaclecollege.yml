name: Build and deploy Python app to Azure Web App - pinnaclecollege

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Copy everything except heavy/local junk. KEEP your Django code.
      - name: üì¶ Prepare artifact folder
        run: |
          shopt -s dotglob
          mkdir -p artifact
          rsync -av \
            --exclude='.git' \
            --exclude='venv' \
            --exclude='env' \
            --exclude='artifact' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.mypy_cache' \
            --exclude='*.pyc' \
            --exclude='*.log' \
            --exclude='*.zip' \
            --exclude='*.tar' \
            --exclude='*.tar.gz' \
            --exclude='downloads' \
            --exclude='excel_uploads' \
            --exclude='media' \
            --exclude='uploads' \
            ./ artifact/

      # Install runtime deps into the artifact so they exist on the App Service
      - name: üì¶ Vendor Python dependencies into artifact
        run: |
          python -m pip install --upgrade pip
          mkdir -p artifact/.python_packages/lib/site-packages
          pip install -r artifact/requirements.txt -t artifact/.python_packages/lib/site-packages

      # ZIP the artifact for Run-From-Package
      - name: üóúÔ∏è Create deployment zip
        run: |
          cd artifact
          zip -r ../artifact.zip . -x "*/__pycache__/*"
          cd -
          du -sh artifact.zip || true

      # Show what we are deploying (sanity check)
      - name: üîç List artifact contents (top-level)
        run: |
          unzip -l artifact.zip | head -100

      - name: ‚¨ÜÔ∏è Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app-zip
          path: artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app-zip
          path: .

      # Login to set config
      - name: üîê Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Configure once per deploy (idempotent)
      - name: ‚öôÔ∏è Configure Web App (startup, run-from-package, pythonpath, logs)
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            # Enable Run-From-Package
            az webapp config appsettings set \
              -g pinnacle -n pinnaclecollege \
              --settings WEBSITE_RUN_FROM_PACKAGE=1

            # Make sure vendored deps are on PYTHONPATH
            az webapp config appsettings set \
              -g pinnacle -n pinnaclecollege \
              --settings PYTHONPATH=/home/site/wwwroot/.python_packages/lib/site-packages

            # Set Gunicorn startup
            az webapp config set \
              -g pinnacle -n pinnaclecollege \
              --startup-file "gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0:\$PORT"

            # (Optional) Turn on container logs to see startup errors
            az webapp log config \
              -g pinnacle -n pinnaclecollege \
              --docker-container-logging filesystem --level information

            # DB settings (leave values in GitHub Secrets)
            az webapp config appsettings set -g pinnacle -n pinnaclecollege --settings \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}'

      # Refresh token right before upload to avoid 60-min expiry
      - name: üîê Azure login (refresh before deploy)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: üöÄ Deploy to Azure Web App (Run-From-Package)
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'pinnaclecollege'
          slot-name: 'Production'
          package: artifact.zip
