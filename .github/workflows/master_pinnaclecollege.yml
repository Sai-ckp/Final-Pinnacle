name: Build and deploy Python app to Azure Web App - pinnaclecollege

on:
  push:
    branches: [ master ]   # <-- Must match your EntraID federated credential subject
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Prepare a LEAN artifact (exclude heavy/local junk, but keep your Django code)
      - name: 📦 Prepare artifact (slim copy)
        run: |
          shopt -s dotglob
          mkdir -p artifact
          rsync -av \
            --delete \
            --exclude='.git' \
            --exclude='venv' \
            --exclude='env' \
            --exclude='artifact' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.mypy_cache' \
            --exclude='*.pyc' \
            --exclude='*.log' \
            --exclude='*.zip' \
            --exclude='*.tar' \
            --exclude='*.tar.gz' \
            --exclude='downloads' \
            --exclude='excel_uploads' \
            --exclude='media' \
            --exclude='uploads' \
            ./ artifact/

      # Vendor runtime deps into the artifact so Django/gunicorn exist at runtime
      - name: 📦 Vendor Python dependencies into artifact
        run: |
          python -m pip install --upgrade pip
          mkdir -p artifact/.python_packages/lib/site-packages
          pip install -r artifact/requirements.txt -t artifact/.python_packages/lib/site-packages

      - name: 🔍 Verify artifact contents & size
        run: |
          ls -la artifact | head -100
          du -sh artifact || true

      - name: ⬆️ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: artifact

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ⬇️ Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: app

      - name: 📂 Move contents to root for deployment
        run: |
          shopt -s dotglob
          cp -r app/* .
          echo "Root listing before deploy:"
          ls -la | head -120

      # Login once to set config/app settings
      - name: 🔐 Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Disable Oryx (we vendor deps), set PYTHONPATH and startup command, and DB envs
      - name: ⚙️ Configure Web App
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set \
              --name pinnaclecollege \
              --resource-group "pinnacle" \
              --settings \
                SCM_DO_BUILD_DURING_DEPLOYMENT=false \
                ENABLE_ORYX_BUILD=false \
                PYTHONPATH=/home/site/wwwroot/.python_packages/lib/site-packages

            az webapp config set \
              --name pinnaclecollege \
              --resource-group "pinnacle" \
              --startup-file "gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0:\$PORT"

            # App (DB) settings
            az webapp config appsettings set \
              --name pinnaclecollege \
              --resource-group "pinnacle" \
              --settings \
                DB_NAME='${{ secrets.DB_NAME }}' \
                DB_USER='${{ secrets.DB_USER }}' \
                DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
                DB_HOST='${{ secrets.DB_HOST }}' \
                DB_PORT='${{ secrets.DB_PORT }}'

      # Refresh token right before heavy upload to avoid 60-min expiry
      - name: 🔐 Azure login (refresh before deploy)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: 🚀 Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'pinnaclecollege'
          slot-name: 'Production'
          package: .
