# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# name: Build and Deploy Django App to Azure Web App

# on:
#   push:
#     branches:
#       - master
#   workflow_dispatch:

# env:
#   DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
#   DB_NAME: ${{ secrets.DB_NAME }}
#   DB_USER: ${{ secrets.DB_USER }}
#   DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#   DB_HOST: ${{ secrets.DB_HOST }}
#   DB_PORT: ${{ secrets.DB_PORT }}
#   SECRET_KEY: ${{ secrets.SECRET_KEY }}

# jobs:
#   build:
#     name: üõ† Build Django App
#     runs-on: ubuntu-latest

#     steps:
#       - name: üì• Checkout Code
#         uses: actions/checkout@v4

#       - name: üì¶ Create Deployment Artifact
#         run: |
#           shopt -s dotglob
#           mkdir artifact
#           rsync -av --exclude='venv' --exclude='artifact' --exclude='.git' ./ artifact/

#       - name: üì§ Upload Artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: artifact

#   deploy:
#     name: üöÄ Deploy to Azure
#     runs-on: ubuntu-latest
#     needs: build

#     permissions:
#       id-token: write
#       contents: read

#     steps:
#       - name: üì• Download Artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app
#           path: app

#       - name: üìÇ Move App Files to Root
#         run: |
#           shopt -s dotglob
#           cp -r app/* .

#       - name: üîê Azure Login
#         uses: azure/login@v2
#         with:
#           client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C153C72D964D4C23AD6589F51FAD1703 }}
#           tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_FF813C25EBC54D41816D0DC0FDC2C23B }}
#           subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_CE3068C0BB68418FB7F677E09B099DE8 }}

#       - name: üöÄ Deploy to Azure Web App
#         uses: azure/webapps-deploy@v3
#         with:
#           app-name: 'pinnaclecollege'
#           slot-name: 'Production'
#           package: .
name: Build and deploy Python app to Azure Web App - pinnaclecollege

on:
  push:
    branches:
      - main          # change to 'master' if your repo uses master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîé Detect changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            html:
              - '**/*.html'
              - 'templates/**'
            static:
              - 'static/**'
            backend:
              - '**/*.py'
              - 'requirements.txt'

      # (Runner-time deps only; your app still needs requirements.txt for Azure to install at runtime)
      - name: üß± Install system dependencies for WeasyPrint (runner)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libffi-dev \
            shared-mime-info

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: üíæ Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üì¶ Create venv & install dependencies (runner)
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: üß∫ collectstatic (only when needed)
        if: steps.changes.outputs.html == 'true' || steps.changes.outputs.static == 'true' || steps.changes.outputs.backend == 'true'
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py collectstatic --noinput || true

      - name: üóÑÔ∏è Run Django migrations (only when backend changed)
        if: steps.changes.outputs.backend == 'true'
        env:
          DJANGO_SETTINGS_MODULE: student_alerts_app.deployment
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: üì¶ Prepare artifact
        run: |
          shopt -s dotglob
          mkdir artifact
          rsync -av --exclude='venv' --exclude='artifact' --exclude='.git' ./ artifact/

      - name: ‚¨ÜÔ∏è Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: artifact

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: app

      - name: üìÇ Move contents to root for deployment
        run: |
          shopt -s dotglob
          cp -r app/* .

      - name: üîç List files before deployment (debug)
        run: |
          pwd
          ls -la
          echo "---- requirements.txt (first 120 lines) ----"
          sed -n '1,120p' requirements.txt || true

      - name: üîê Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_365CC9311E4C4A2487CB1BAA01746F7A }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0EB78AC662B5425DBACE369EDF555C0B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_72AC7174F5C444C1BE9DEAD7A37582D5 }}

      # Ensure Oryx builds during OneDeploy so Django gets installed
      - name: ‚öôÔ∏è Ensure Oryx build & startup command
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set \
              --name pinnaclecollege \
              --resource-group "pinnacle" \
              --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true ENABLE_ORYX_BUILD=true
            az webapp config set \
              --name pinnaclecollege \
              --resource-group "pinnacle-college" \
              --startup-file "gunicorn student_alerts_app.wsgi:application --bind=0.0.0.0:\$PORT"

      - name: üå± Set Azure Web App environment variables (DB, etc.)
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az webapp config appsettings set --name pinnaclecollege --resource-group "pinnacle" --settings \
              DB_NAME='${{ secrets.DB_NAME }}' \
              DB_USER='${{ secrets.DB_USER }}' \
              DB_PASSWORD='${{ secrets.DB_PASSWORD }}' \
              DB_HOST='${{ secrets.DB_HOST }}' \
              DB_PORT='${{ secrets.DB_PORT }}'

      - name: üöÄ Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'pinnaclecollege'
          slot-name: 'Production'
          package: .



